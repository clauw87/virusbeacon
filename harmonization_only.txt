# harmonization_rules_mapping_4

NOTE: Now that we are getting Nanopore data we should start showing the two objects run_platform and run_platform_model. Note that before we were showing only run_platform_model and the column name in Beacon UI is now PLATFORM, so we now need to change that column name to PLATFORM MODEL and add the new column PLATFORM to the UI table

NOTE: “valid values” are the only values that should be extracted/kept in database (since other values coming from tags in those cases are unrelated and should therefore not been shown. These cases are accompanied by statement “Rest of values in the column change to NULL (leave empty)”)

## RUN

1. run_platform

* **XML tags**
names(xml$EXPERIMENT_PACKAGE_SET$EXPERIMENT_PACKAGE$EXPERIMENT$PLATFORM)

* **Valid values**
all 

2. run_platform_model 

* **XML tags**
xml$EXPERIMENT_PACKAGE_SET$EXPERIMENT_PACKAGE$EXPERIMENT$PLATFORM$ILLUMINA$INSTRUMENT_MODEL[[1]]

* **Valid values**
all

* **Values to fix**
(in general, remove the string Illumina an the space afterwards from all values)
"Illumina MiSeq"  ->  "MiSeq"  
"Illumina HiSeq 2500"  ->  "HiSeq 2500"  
"Illumina iSeq 100"     ->  "iSeq 100"  
"Illumina MiniSeq"   ->     "MiniSeq"  
"Illumina NovaSeq 6000" -> "NovaSeq 6000"


## BIOSAMPLE 

1. biosample_type
* **XML tags**
  * tissue 
  * env_medium
  * isolation_source
  * host_tissue_sampled

* **Valid values**
  * "Human BALF sample", 
  * "Bronchoalveolar lavage fluid", 
  * "bronchoalveolar lavage fluid(BALF)", 
  * "Oro-pharyngeal swab", 
  * "oropharyngeal swab",  
  * "nasopharynx",  
  * "swab" 
  * "respiratory nasopharyngeal sample" 
  * "Nasopharyngeal/throat swab"
  * "Combined nasopharyngeal and oropharyngeal swab" 
  * "oral swab; nasal swab; tracheal wash" 
  * "Diagnostic Swab" 
  * "tracheal swab" 
  * "bronchoalveolar lavage"
  * "sputum"
  * "oralpharyngeal" 
  * "nasal swab"  
  * "oropharynx"
  * "Stool"

  Rest of values in the column change to NULL (leave empty)

NOTE: now there are samples that are mixes, e.g "oral swab; nasal swab; tracheal wash”. In those cases we should label them as “mix” and also as their component values (“oro/naso-pharyngeal swab”, ”tracheal swab/wash“). That’s why they appear duplicated in more than one “values to harmonize” set.

* **Values to show** (these ones will be the values shown in Beacon UI)
  * “bronchoalveolar lavage fluid" 
  * “naso/oro-pharyngeal swab”
  * “pharyngeal swab”
  * ”tracheal swab/wash“ 
  * ”sputum”
  * ”feces”
  * ~~“mix”~~ "oropharingeal swab; nasopharyngeal swab; traqueal whash" 

* **Values to harmonize**

  * bronchoalveolar lavage fluid values:
    * "Bronchoalveolar lavage fluid", 
    * "bronchoalveolar lavage fluid(BALF)”, 
    * "Human BALF sample"
    * "bronchoalveolar lavage"

    These values would be shown as “bronchoalveolar lavage fluid"  

  * Naso/ro-pharyngeal swab values:
    * “Oro-pharyngeal swab", 
    * "oropharyngeal swab” 
    * "Combined nasopharyngeal and oropharyngeal swab"
    * "oral swab; nasal swab; tracheal wash" 
    * "oralpharyngeal"
    * "oropharynx"
    * “nasopharynx" 
    * "respiratory nasopharyngeal sample"
    * "Nasopharyngeal/throat swab"
    * "Combined nasopharyngeal and oropharyngeal swab"
    * "oral swab; nasal swab; tracheal wash"  
    * "nasal swab"  
    * “swab”
    * "Diagnostic Swab" 
    * "Combined nasopharyngeal and oropharyngeal swab"

    These values would be shown as “pharyngeal swab” 


  * tracheal swab/wash values: 
    * ”tracheal swab" 
    * "oral swab; nasal swab; tracheal wash" 


    These values would be shown as “tracheal swab/wash” 


  * sputum values 
    * “sputum”   

    These values would be shown as “sputum” 


  * feces values 
    * “Stool”   
    These values would be shown as “feces” 


  * mix 
    * "oral swab; nasal swab; tracheal wash"   
	
    These values would be shown as “mix” in addition to the other labels that apply



2. collection_date

* **XML tags**
  * collection_date 

* **Valid values**
  all

 
* **Values to harmonize**
  * ”%d-%B-%Y” 
  * “%Y-%m” 
  * %Y”

  Harmonize all to “%Y-%m-%d”

e.g

  * “%d-%B-%Y” values 
    * "01-Mar-2020"
    * "19-MAR-2020"

    convert to “%Y-%m-%d” to get:
    * “2020-03-01”
    * "2020-03-19"


* **Value to fix**
  “2019-01-19” ->  "2020-01-19" 
  "missing"  -> NULL
  "not applicable"  -> NULL



## HOST/INDIVIDUAL

1. host_taxon_id 
 
* **XML tags**
  * host

* **Valid values**
  * ”Homo sapiens”

  Rest of values in the column change to NULL (leave empty).


2. geo_origin

* **XML tags**
  * geo_loc_name
  * country
 (combined) * `geographic location (country and/or sea)`
 (combined) * `geographic location (region and locality)`  

(The last two are pairs country-region shown in different tags, so we could extract them in just one value as `geographic location (country and/or sea)`: `geographic location (region and locality)` to match the others i.e “United Kingdom: Scotland”)


* **Valid values**
  all
     

* **Values to fix/ harmonize**

"China:Wuhan" ->  "China: Hubei: Wuhan”
"China: Wuhan" ->  "China: Hubei: Wuhan”
"USA:WA" -> "USA: Washington" 
"USA: WA"  -> "USA: Washington" 
"USA: Seattle, WA"  -> "USA: Washington: Seattle“
"USA:WI:Madison" -> "USA: Wisconsin: Madison"
"USA:WI,Madison" -> "USA: Wisconsin: Madison"
"USA:Wisconsin" -> "USA: Wisconsin” 
"USA: Racine, Wisconsin" -> "USA: Wisconsin: Racine”
"USA: Milwaukee, Wisconsin"    -> "USA: Wisconsin: Milwaukee”   
"USA: Port Washi, Wisconsin"    -> "USA: Wisconsin: Racine”  
"USA: Thiensvill, Wisconsin"    -> "USA: Wisconsin: Port Washi” 
"USA: Grafton, Wisconsin"    -> "USA: Wisconsin: Grafton”     
"USA: Mequon, Wisconsin"      -> "USA: Wisconsin: Mequon”   
"USA: Whitefish, Wisconsin"    -> "USA: Wisconsin: Whitefish”   
"USA: Pewaukee, Wisconsin"     -> "USA: Wisconsin: Pewaukee”  
"USA: Cudahy, Wisconsin"      -> "USA: Wisconsin: Cudahy”    
"USA: Glendale, Wisconsin"       -> "USA: Wisconsin: Glendale”
"USA: Greenfield, Wisconsin"     -> "USA: Wisconsin: Greenfield” 
"USA: South Milwaukee, Wisconsin"  -> "USA: Wisconsin: South Milwaukee”
"USA: Elm Grove, Wisconsin"     -> "USA: Wisconsin: Elm Grove”  
"USA: Franklin, Wisconsin"       -> "USA: Wisconsin: Franklin”
"USA: Brookfield, Wisconsin"      -> "USA: Wisconsin: Brookfield”
"USA: Campbellsp, Wisconsin"     -> "USA: Wisconsin: Campbellsp”
"USA: Green Field, Wisconsin"     -> "USA: Wisconsin: Green Field”
"USA: Oak Creek, Wisconsin"      -> "USA: Wisconsin: Oak Creek”
"USA: Jackson, Wisconsin"         -> "USA: Wisconsin: Jackson”
"USA: Wauwatosa, Wisconsin"      -> "USA: Wisconsin: Wauwatosa”
"USA: New Berlin, Wisconsin"  -> "USA: Wisconsin: New Berlin” 
"USA: Wauwatosa, Wisconsin"  -> "USA: Wisconsin: Wauwatosa” 
"USA: CA, San Diego County"  -> "USA: California: San Diego County”
"USA:Virginia" -> "USA: Virginia"
"Australia: Melbourne, Victoria" -> "Australia: Victoria: Melbourne” 
"Cambodia:Sihanoukville" -> "Cambodia: Sihanoukville" 



3. host_age

* **XML tags**
  * age
  * host_age

* **Valid values**
  all

* **Values to fix** 
“missing” -> NULL
“4 years” -> 4 
“35 y” -> 35
“5 y” -> 5


4. host_disease

* **XML tags**
  * host_disease

* **Valid values**
  * "nCoV pneumonia"                                 
  * "COVID-19"                                                                                
  * "severe acute respiratory syndrome"   
  * "respiratory infection"           

  Rest of values in the column change to NULL (leave empty)


4. host_sex

* **XML tags**
  * host_sex

* **Valid values**
  * “female”                                 
  * “male” 
  * “Female”                                 
  * “Male” 

 Rest of values in the column change to NULL (leave empty)

* **Values to harmonize/fix**
“Female” -> “female” 
“Male” -> “male” 
“not applicable” -> NULL
"missing" -> NULL

## VIRUS

1. taxon_id

* **XML tags**
  * EXPERIMENT_PACKAGE_SET> EXPERIMENT_PACKAGE> SAMPLE> SAMPLE_NAME> TAXON_ID[[1]]
    
* **Valid values**
  all

* **Values to harmonize/fix**
  * "9606"  (Homo sapiens) -> “2697049”
  * "433733” ("human lung metagenome" ) -> “2697049”

